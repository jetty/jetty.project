<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.eclipse.jetty.tests</groupId>
    <artifactId>tests-parent</artifactId>
    <version>10.0.22-SNAPSHOT</version>
  </parent>
  <artifactId>test-integration</artifactId>
  <packaging>jar</packaging>
  <name>Jetty Tests :: Integrations</name>
  <properties>
    <bundle-symbolic-name>${project.groupId}.integrations</bundle-symbolic-name>
    <test-home-dir>${project.build.directory}/test-dist</test-home-dir>
    <test-libs-dir>${project.build.directory}/test-libs</test-libs-dir>
    <test-wars-dir>${project.build.directory}/test-wars</test-wars-dir>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>apache-jsp</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-deploy</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-home</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
      <exclusions>
        <!-- Introduces test scope dependencies that shouldn't be present during testing.
             Such as: older slf4j-api classes,
                      or a slf4j-impl (in wildfly-elytron-2.2.2.Final.jar!/org/slf4j/ILoggerFactory.class) -->
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>infinispan-remote-query</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-rewrite</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty.http2</groupId>
      <artifactId>http2-server</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-alpn-server</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-annotations</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlets</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-slf4j-impl</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty.demos</groupId>
      <artifactId>demo-jetty-webapp</artifactId>
      <type>war</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty.tests</groupId>
      <artifactId>jetty-http-tools</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty.tests</groupId>
      <artifactId>test-webapp-rfc2616</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty.toolchain</groupId>
      <artifactId>jetty-test-helper</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty.websocket</groupId>
      <artifactId>websocket-javax-server</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty.websocket</groupId>
      <artifactId>websocket-jetty-client</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty.websocket</groupId>
      <artifactId>websocket-jetty-server</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-wars-for-testing</id>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <phase>process-test-resources</phase>
            <configuration>
              <includeScope>test</includeScope>
              <includeTypes>war</includeTypes>
              <stripVersion>true</stripVersion>
              <outputDirectory>${project.build.directory}/webapps</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>unpack-jetty-home</id>
            <goals>
              <goal>unpack</goal>
            </goals>
            <phase>process-test-resources</phase>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.eclipse.jetty</groupId>
                  <artifactId>jetty-home</artifactId>
                  <version>${project.version}</version>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                </artifactItem>
              </artifactItems>
              <outputAbsoluteArtifactFilename>true</outputAbsoluteArtifactFilename>
              <outputDirectory>${test-home-dir}</outputDirectory>
              <overWriteSnapshots>true</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- Disabled due to junit5 bug - https://github.com/junit-team/junit5/issues/801 -->
          <!--<forkMode>always</forkMode>-->
          <useSystemClassLoader>true</useSystemClassLoader>
          <useManifestOnlyJar>false</useManifestOnlyJar>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
